// Ellipsis
@mixin ellipsis
  overflow:       hidden
  text-overflow:  ellipsis
  white-space:    nowrap


// Image value function
@function image-value($image, $options)
  @if type-of($options) == 'string'
    $options: append((), $options)

  $path:  "images/#{$image}"
  $ext:   "png"

  @if index($options, remote) != false
    $path: "images/remote/#{$image}"

  @if index($options, plugin) != false
    $path: "../../../../assets/#{$path}"
  @else
    $path: "../#{$path}"

  @if index($options, gif) != false
    $ext: "gif"

  @if index($options, retina) != false
    $path: -webkit-image-set(url(#{$path}.#{$ext}) 1x, url(#{$path}@2x.#{$ext}) 2x)
  @else
    $path: url(#{$path}.#{$ext})

  @return $path


// Border image
@mixin border-img($image, $size, $options: (), $repeat: stretch)
  -webkit-border-image: image-value($image, $options) $size $repeat
  border-width:         nth($size, 1)+px nth($size, 2)+px nth($size, 3)+px nth($size, 4)+px


// Content image
@mixin content-img($image, $options: ())
  content: image-value($image, $options)


// Background image
@mixin background-img($image, $options: (), $alt: false)
  @if type-of($options) == 'string'
    $options: append((), $options)

  background-image: image-value($image, $options)

  @if index($options, pressed) != false
    $customAlt: type-of($alt) == 'list'

    @if $customAlt
      $alt: nth($alt, 1)
    @else if type-of($alt) != 'string'
      $alt: Pressed

    @if $customAlt
      &.#{nth($alt, 2)}
        background-image: image-value(#{$image}#{nth($alt, 1)}, $options)
    @else
      &:active
        background-image: image-value(#{$image}#{$alt}, $options)


// Generic icon
@mixin icon($class, $icon, $selected:'', $options:())
  @if type-of($selected) != 'string'
    $options:   $selected
    $selected:  $icon
  .icons > *.#{$class}, .icon.#{$class}, table.icons td:first-child.#{$class}, table td.icon.#{$class}:first-child
    &::before
      @include  background-img(#{$icon}, $options)
    &.selected::before
      @include  background-img(#{$selected}, $options)


// Default queue artwork
@mixin default_queue_artwork($type, $image, $options: ())
  #queue_popup li p[data-item-plugin=#{$type}]
    @include background-img($image, $options)

// Default now playing artwork
@mixin default_now_playing_artwork($type, $image, $options: ())
  #browser > header #lcd #lcd_artwork[data-item-plugin=music]
    @include background-img($image, $options)






